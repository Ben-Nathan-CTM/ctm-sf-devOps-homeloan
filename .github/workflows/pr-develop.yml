name: Pull Request to Develop

on:
  pull_request:
    branches: [develop]

permissions:
  contents: write

jobs:
  validate_pull_request:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: Ben-Nathan-CTM/ctm-sf-devOps-homeloan
          ref: feature

      - name: Install Salesforce CLI
        run: |
          npm install @salesforce/cli --location=global
          nodeInstallPath=$(npm config get prefix)
          echo "$nodeInstallPath/bin" >> $GITHUB_PATH
          sf --version

      - name: Install jq
        run: |
          sudo apt-get install jq

      - name: Populate auth file
        shell: bash
        run: "echo ${{ secrets.DEVHUB_SFDX_URL }} > ./DEVHUB_SFDX_URL.txt"

      - name: Authenticate Dev Hub
        run: "sf org login sfdx-url -f ./DEVHUB_SFDX_URL.txt -a devhub -d"

      # - name: Create scratch org
      #   run: "sfdx force:org:create -f config/project-scratch-def.json -a ctm_scratch -s -d 1"
      - name: Create scratch org from Snapshot
        run: "sf org create scratch --definition-file config/ctmsnapshotscratch-scratch-def.json --alias ctm-scratch --wait 10 --target-dev-hub devhub"

      # - name: Install Packages
      #   run: |
      #     PACKAGES=(04t960000000S8kAAE 04t960000000S5gAAE 04t960000000S5lAAE 04t960000000S5WAAU 04t960000000SfLAAU  04tOm0000000HGzIAM    04t3m000002D9hu 04t5Y0000023R28QAE 04t6g000008So61AAC 04tOm0000000FqHIAU   04tOm0000000GBFIA2     04tOm0000000PsrIAE   04tOm0000000Bt7IAE 04t6g000008C6lwAAC 04t3u000003asycAAA 04t5w000003gWWBAA2 )
      #     for package in "${PACKAGES[@]}"; do
      #       echo "Installing $package..."
      #       # Replace the below command with the sfdx command to install the package
      #       sfdx force:package:install -p "$package" -w 10 -b 10 -r
      #     done
      - name: Populate auth file and login to scratch org
        run: "sf org display --target-org ctm-scratch --verbose --json > authFile.json"

      - name: Authenticate Dev Hub
        run: "sf org login sfdx-url -f ./authFile.json"

      - name: Push source to scratch org
        run: "sfdx force:source:push -f -u ctm-scratch"

      - name: Create new PACKAGE
        run: |
          sf package version create -d ctm-sf-homeloan-app -x -f config/project-scratch-def.json -w 60 --code-coverage --json
          new_version_id=$(grep -o "04t[[:alnum:]]\{15\}" sfdx-project.json | tail -n1)
          echo "version_id=${new_version_id}" >> $GITHUB_ENV

      - name: Check code coverage
        run: |
          test $(sfdx force:package:version:report -p "$version_id" --json | jq .result.HasPassedCodeCoverageCheck) = 'true'

      # - name: Install latest package
      #   run: |
      #        sfdx force:package:install -p "$version_id" -w 10 -b 10 -r

      - name: Store new version id
        run: |
          git checkout feature
          git config user.name "Ben-Nathan-CTM"
          git config user.email "148920993+Ben-Nathan-CTM@users.noreply.github.com"
          sed -i -e "s/04t[[:alnum:]]\{15\}/${version_id}/" README.md
          git add README.md
          git add sfdx-project.json
          git commit -m "Updating new package pre-release version"
          git push

      # - name: Check code coverage
      #   run: |
      #       sfdx force:apex:test:run --codecoverage --resultformat json --synchronous --testlevel RunLocalTests --wait 10 > tests.json
      #       coverage=$(jq .result.summary.orgWideCoverage tests.json | grep -Eo "[[:digit:]]+")
      #       test $coverage -ge 50

      - name: Delete scratch org
        if: always()
        run: "sfdx force:org:delete -p -u ctm_scratch"
